# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Get existing channel
  ansible.builtin.uri:
    url: "{{ ingress_protocol }}://mattermost.{{ ingress_domain }}/api/v4/teams/{{ mm_team_id }}/channels/name/{{ mm_channel_name }}"
    method: GET
    status_code: [200, 404, 400]
    headers:
      Authorization: "Bearer {{ mm_admin_token | default(mm_token) }}"
  register: mm_channel_get_raw

- block:
    - name: Create new channel
      ansible.builtin.uri:
        url: "{{ ingress_protocol }}://mattermost.{{ ingress_domain }}/api/v4/channels"
        method: POST
        body:
          team_id: "{{ mm_team_id }}"
          name: "{{ mm_channel_name }}"
          display_name: "{{ mm_channel_display_name | default(mm_channel_name) }}"
          type: "O" # "O" = Open, "P" = Private
        status_code: 201
        body_format: json
        headers:
          Authorization: "Bearer {{ mm_admin_token | default(mm_token) }}"
      register: mm_channel_post_raw

    - name: Set channel ID if new channel is created
      ansible.builtin.set_fact:
        mm_channel_id: "{{ mm_channel_post_raw.json.id }}"
      when: mm_channel_post_raw.status == 201
  when: mm_channel_get_raw.status in [404, 400]

- name: Set channel ID if channel exists
  ansible.builtin.set_fact:
    mm_channel_id: "{{ mm_channel_get_raw.json.id }}"
  when: mm_channel_get_raw.status == 200